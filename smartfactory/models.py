# Create your models here.
from django.db import models
from django.db.models import JSONField
from django.utils.text import slugify
from django.conf import settings

class SmartSearch(models.Model):
    id                          = models.IntegerField(null=False, blank=False)
    name                        = models.CharField(max_length=50, null=True, blank=True)
    shortDescription            = models.TextField(null=True, blank=True)
    fullDescription             = models.TextField(null=True, blank=True)
    sku                         = models.CharField(primary_key=True,max_length=50, blank=False)
    stockQuantity               = models.IntegerField(null=False, blank=True)
    price                       = models.FloatField(null=True, blank=True)
    published                   = models.BooleanField(null=True, blank=True)
    oldPrice                    = models.FloatField(null=True, blank=True)
    sizeGuideUrl                = models.TextField(null=True, blank=True)
    language                    = models.CharField(max_length=50, null=True, blank=True)
    slug                        = models.CharField(max_length=300, null=True, blank=True)
    picture                     = models.CharField(max_length=100, null=True, blank=True)
    sizes                       = models.JSONField(null=True)
    pictures                    = models.JSONField(null=True)
    createdOnUtc                = models.DateTimeField(verbose_name="date published")
    updatedOnUtc                = models.DateTimeField(verbose_name="date updated")
    artikelNr1                  = models.IntegerField(null=False, blank=True)
    artikelNr2                  = models.SmallIntegerField(null=True, blank=True)
    statusCode                  = models.IntegerField(null=True, blank=True)
    statusText                  = models.CharField(max_length=50, null=True, blank=True)
    saisonRetourenCode          = models.SmallIntegerField(null=True, blank=True)
    saisonRetourenText          = models.CharField(max_length=50, null=True, blank=True)
    saisonCode                  = models.SmallIntegerField(null=True, blank=True)
    saisonText                  = models.CharField(max_length=50, null=True, blank=True)
    geschlechtCode              = models.SmallIntegerField(null=True, blank=True)
    geschlechtText             = models.TextField(null=True, blank=True)
    rayonCode                   = models.SmallIntegerField(null=True, blank=True)
    rayonText                   = models.CharField(max_length=50, null=True, blank=True)
    warenArtCode                = models.IntegerField(null=True, blank=True)
    warenArtText                = models.CharField(max_length=50, null=True, blank=True)
    wuCode                      = models.SmallIntegerField(null=True, blank=True)
    wuText                      = models.TextField(null=True, blank=True)
    waCode                      = models.SmallIntegerField(null=True, blank=True)
    warenGruppe                 = models.CharField(max_length=50, null=True, blank=True)
    alterCode                   = models.IntegerField(null=True, blank=True)
    farbe                       = models.CharField(max_length=50, null=True, blank=True)
    material                    = models.TextField(null=True, blank=True)
    bezeichnung                 = models.TextField(null=True, blank=True)
    pictureName                 = models.TextField(null=True, blank=True)
    picturePathLocal            = models.CharField(max_length=50, null=True, blank=True)
    kollektion                  = models.TextField(null=True, blank=True)
    comCode                     = models.TextField(null=True, blank=True)
    lieferant                   = models.TextField(null=True, blank=True)
    eKchf                       = models.FloatField(null=True, blank=True)
    groessenCode                = models.SmallIntegerField(null=True, blank=True)
    categories                  = models.JSONField(null=True)
    productTags                  = models.JSONField(null=True)
    flag                        = models.TextField(null=True, blank=True)
    author                      = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    def __str__(self):
        return self.sku